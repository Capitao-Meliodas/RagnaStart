/*.-----------------------------------------------------------------.
  .    ____                          __                             .
  .   /\  _`\                       /\ \__  __                      .
  .   \ \ \/\_\  _ __    __     __  \ \ ,_\/\_\  __  __     __      .
  .    \ \ \/_/_/\`'__\/'__`\ /'__`\ \ \ \/\/\ \/\ \/\ \  /'__`\    .
  .     \ \ \s\ \ \ \//\  __//\ \d\.\_\ \ \_\ \ \ \ \_/ |/\  __/    .
  .      \ \____/\ \_\\ \____\ \__/.\_\\ \__\\ \_\ \___/ \ \____\   .
  .       \/___/  \/_/ \/____/\/__/\/_/ \/__/ \/_/\/__/   \/____/   .
  .                                                                 .
  .          2014~2017 © Creative Services and Development          .
  .                      www.creativesd.com.br                      .
  .-----------------------------------------------------------------.
  . Script:                                                         .
  .    Battleground Warfare (2nd Time Assault)                      .
  .-----------------------------------------------------------------.
  . Author: Romulo SM (sbk_)                          Version: 1.0  .
  .                                                                 .
  . Compatible:                                                     .
  .    eAthena, rAthena and derivations.                            .
  .-----------------------------------------------------------------.
  . Description:                                                    .
  .    Battle in which the Armies must destroy the opponent's       .
  .  Forward Station.                                               .
  .    The main objective is to eliminate the barricades reach the  .
  .  Pavilion command and destroy it.                               .
  .    There are two secondary goals to add more points:            .
  .        - Eliminate Sentry Guards.                               .
  .        - Eliminate the Pavilions, Guard Corps and Arsenal.      .
  *-----------------------------------------------------------------*/
  
// Time Assault Engine
// -----------------------------------------------------------------
bat_t02,1,1,3	script	start#bat_t02	CLEAR_NPC,{
OnInit:
	// Removing Players from Arena
	mapwarp "bat_t02","bat_room",154,150;
	
	// Creating Queue and specific times for Arena
	queue_create(16, "2nd Time Assault", 0, 0, "start#bat_t02::OnReadyCheck");
	set $@AssaultBG2_id1, bg_create_team(31, "bat_t02", 84, 316, 23, 189, 0, "start#bat_t02::OnGuillaumeQuit", "", "start#bat_t02::OnGuillWO");
	set $@AssaultBG2_id2, bg_create_team(32, "bat_t02", 236, 316, 77, 90, 1, "start#bat_t02::OnCroixQuit", "", "start#bat_t02::OnCroixWO");
	
	// Expeling Players
	bg_kick_team($@AssaultBG2_id1, 0);
	bg_kick_team($@AssaultBG2_id2, 0);
	
	// Getting Started
	set .global_announce, 0;
	set .BlockStatus, 0;
	donpcevent "start#bat_t02::OnReadyCheck";
	
	// Set NPC's of Flags with the Symbol of the Army.
	donpcevent "::OnBatT02Emblem";
	end;
	
OnReadyCheck:
	if( .BlockStatus )
	{
		sleep 5000;
		donpcevent "start#bat_t02::OnReadyCheck";
	}
		
	set .BlockStatus, 1;

	set .@min_player, callfunc("bg_getarenainfo", 16, "min_player");
	set .@max_player, callfunc("bg_getarenainfo", 16, "max_player");
	set .@a_name$, callfunc("bg_getarenainfo", 16, "arena_name");
	set .@min_player, (.@min_player*2);
	
	if( .@max_player > MAX_BG_MEMBERS )
	{
		bg_console "(BG_ID: 16) Maximum number of players in a team exceeds the established limit, setting the maximum number of players to " + MAX_BG_MEMBERS + ".";
		set .@max_player, MAX_BG_MEMBERS;
	}
	
	queue_get_players 16;
	set .@playlist_team1, bg_team_size($@AssaultBG2_id1);
	set .@playlist_team2, bg_team_size($@AssaultBG2_id2);
	if( !.@queue_count )
	{
		set .BlockStatus, 0;
		end;
	}
	else if( $@AssaultBG2 && $@AssaultBG2 < 2 && .@queue_count && (.@playlist_team1 < .@max_player || .@playlist_team2 < .@max_player) )
	{
		set .@guill, 0;
		set .@croix, 0;
		set .@count_g, 0;
		set .@count_c, 0;
		
		// ---------------------------------------------------
		// -              Equating the Armies                -
		// ---------------------------------------------------
		if( .@playlist_team1 < .@playlist_team2 )
		{
			set .@guill, .@playlist_team2-.@playlist_team1;
			for( set .@i,0; .@i < .@guill; set .@i, .@i + 1 )
			{
				bg_join_team $@AssaultBG2_id1, 1, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@count_g, .@count_g + 1;
				message .@queue_player$[.@i], "You joined Guillaume's Army in a battle on " + .@a_name$ + " that is already happening, and will be teleported in 10 seconds.";
			}
			
			deletearray .@queue_cid;
			deletearray .@queue_aid;
			deletearray .@queue_player$;
			set .@queue_count, 0;
			queue_get_players 16; // Reset
			set .@playlist_team1, bg_team_size($@AssaultBG2_id1);
		}
		else if( .@playlist_team2 < .@playlist_team1 )
		{
			set .@croix, .@playlist_team1-.@playlist_team2;
			for( set .@i,0; .@i < .@croix; set .@i, .@i + 1 )
			{
				bg_join_team $@AssaultBG2_id2, 1, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@count_c, .@count_c + 1;
				message .@queue_player$[.@i], "You joined Croix's Army in a battle on" + .@a_name$ + " that is already happening, and will be teleported in 10 seconds.";
			}
			
			deletearray .@queue_cid;
			deletearray .@queue_aid;
			deletearray .@queue_player$;
			set .@queue_count, 0;
			queue_get_players 16; // Reset
			set .@playlist_team2, bg_team_size($@AssaultBG2_id2);
		}
		// ---------------------------------------------------
		// -             Expanding the Armies                -
		// ---------------------------------------------------
		if( .@queue_count && .@playlist_team1 == .@playlist_team2 && .@playlist_team1 < .@max_player && .@playlist_team2 < .@max_player )
		{
			set .@guill, .@max_player-.@playlist_team1;
			set .@croix, .@max_player-.@playlist_team2;
			
			if( .@queue_count > (.@guill+.@croix) )
				set .@queue_count, (.@guill+.@croix);
				
			if( .@queue_count%2 )
				set .@queue_count, .@queue_count-1;
			
			set .@size, .@queue_count/2;
			for( set .@i, 0; .@i < .@size; set .@i, .@i + 1 )
			{
				bg_join_team $@AssaultBG2_id1, 1, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@players_name_g$[.@count_g], .@queue_player$[.@i];
				set .@count_g, .@count_g + 1;
			}
			
			for( set .@i,.@size; .@i < .@queue_count; set .@i, .@i + 1 )
			{
				bg_join_team $@AssaultBG2_id2, 1, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				set .@players_name_c$[.@count_c], .@queue_player$[.@i];
				set .@count_c, .@count_c + 1;
			}
		}
		
		if( .@count_c || .@count_g )
		{
			announce "[Battleground]: " + (.@count_c+.@count_g) + " players are being sent to a battle that is going on in " + .@a_name$ + ", the Armies were balanced and expanded.", bc_all, "0xFFCE00";
			sleep 3000;
		}
		
		deletearray .@queue_cid;
		deletearray .@queue_aid;
		deletearray .@queue_player$;
		set .@queue_count, 0;
		queue_get_players 16; // Reset
		
		set .@queue_size, queue_size(16);
		set .@team1_size, bg_team_size($@AssaultBG2_id1);
		set .@team2_size, bg_team_size($@AssaultBG2_id2);
		
		if( .@team1_size < .@max_player || .@team2_size < .@max_player )
		{
			set .@size, (2*.@max_player)-(.@team1_size+.@team2_size)-.@queue_size;
			announce "[Battleground]: There are still " + (.@size) + " spots for a battle going on in " + .@a_name$ + "!", bc_all, "0xFFCE00";
		}
	}
	else if( $@AssaultBG2 && !.global_announce && .@queue_count >= .@min_player )
	{
		announce "[Battleground]: The battle is complete, but there is a battle going on in " + .@a_name$ + ", all players standing in the queue must wait.", bc_all, "0xFFCE00";
		set .global_announce, 1;
	}
	else if( .@queue_count < .@min_player )
		announce "[Battleground]: There are " + (.@min_player-.@queue_count) + " players left in the battle in " + .@a_name$ + "!", bc_all, "0xFFCE00";
	else
	{
		// ---------------------------------------------------
		// -                    Balancing                    -
		// ---------------------------------------------------
		if( .@queue_count > (.@max_player*2) )
			set .@queue_count, (.@max_player*2);
			
		if( .@queue_count%2 )
			set .@queue_count, .@queue_count-1;
			
		if( .@queue_count >= .@min_player )
		{
			for( set .@i,0; .@i < .@queue_count; set .@i, .@i + 2 )
			{
				// Entering Guillaume's Army
				bg_join_team $@AssaultBG2_id1, 1, .@queue_aid[.@i];
				queue_leave 0, .@queue_aid[.@i];
				message .@queue_player$[.@i], "You joined Guillaume's Army, you will be teleported in 10 seconds.";
				
				// Entering Croix's Army
				bg_join_team $@AssaultBG2_id2, 1, .@queue_aid[.@i+1];
				queue_leave 0, .@queue_aid[.@i+1];
				message .@queue_player$[.@i+1], "You joined the Croix's Army, you will be teleported in 10 seconds.";
			}
		}
		
		bg_refresh_patent($@AssaultBG2_id1);
		bg_refresh_patent($@AssaultBG2_id2);
		set .global_announce, 0;
		announce "[Battleground]: Both Armies, are complete good luck in the battles at " + .@a_name$ + ".", bc_all, "0xFFCE00";
		donpcevent "start#bat_t02::OnEnable";
		donpcevent "BattleGround#queue_main::OnStopTimer";
		sleep 3000;
		initnpctimer;
		
		if( .@queue_count < (2*.@max_player) )
		{
			sleep 3000;
			set .@count, (2*.@max_player)-.@queue_count;
			announce "[Battleground]: There are still " + .@queue_count + " spots in the battles in " + .@a_name$ + "!", bc_all, "0xFFCE00";
		}
	}
	set .BlockStatus, 0;
	end;
	
OnEnable:
	// Resetting General Events.
	donpcevent "start#bat_t02::OnReset";

	// Starting Guillaume's scenario.
	donpcevent "barricade#bat_t02_a_1::OnEnable";
	donpcevent "barricade#bat_t02_a_2::OnEnable";
	donpcevent "barricade#bat_t02_a_3::OnEnable";
	donpcevent "guardian#bat_t02_a::OnEnable";
	donpcevent "objectives#bat_t02_a::OnEnable";
	donpcevent "time#bat_t02::OnEnable";
	
	// Signaling variables.
	set $@AssaultBG2, 1;
	set $@AssaultBG2_GuillScore, 0;
	set $@AssaultBG2_CroixScore, 0;
	set $@AssaultBG2_GuillTimer, 0;
	set $@AssaultBG2_CroixTimer, 0;
	set $@AssaultBG2_TIMER, callfunc("bg_getarenainfo", 16, "event_timer");
	bg_updatescore "bat_t02", 0, 0;
	donpcevent "heating_time#bat_t02_a::OnEnable";
	end;
	
OnReset:
	set $@AssaultBG2, 0;
	set $@AssaultBG2_GuillScore,0;
	set $@AssaultBG2_CroixScore,0;
	set $@AssaultBG2_GuillTimer, 0;
	set $@AssaultBG2_CroixTimer, 0;
	set $@AssaultBG2_Victory, 0;
	bg_updatescore "bat_t02", 0, 0;
	donpcevent "barricade#bat_t02_a_1::OnDisable";
	donpcevent "barricade#bat_t02_a_2::OnDisable";
	donpcevent "barricade#bat_t02_a_3::OnDisable";
	donpcevent "barricade#bat_t02_b_1::OnDisable";
	donpcevent "barricade#bat_t02_b_2::OnDisable";
	donpcevent "barricade#bat_t02_b_3::OnDisable";
	donpcevent "guardian#bat_t02_a::OnDisable";
	donpcevent "guardian#bat_t02_b::OnDisable";
	donpcevent "objectives#bat_t02_a::OnDisable";
	donpcevent "objectives#bat_t02_b::OnDisable";
	donpcevent "time#bat_t02::OnStop";
	donpcevent "time_event#bat_t02_a::OnStop";
	donpcevent "countdown#bat_t02_a::OnStop";
	donpcevent "countdown#bat_t02_b::OnStop";
	disablenpc "Lieutenant#t02_a";
	disablenpc "Lieutenant#t02_b";
	donpcevent "start#bat_t02_Out::OnStop";
	end;
	
OnChange:
	set $@AssaultBG2_CroixTimer, gettimetick(2) - $@AssaultBG2_CroixTimer;
	
	// Resetting Events from Guillaume's Scenario.
	donpcevent "barricade#bat_t02_a_1::OnDisable";
	donpcevent "barricade#bat_t02_a_2::OnDisable";
	donpcevent "barricade#bat_t02_a_3::OnDisable";
	donpcevent "guardian#bat_t02_a::OnDisable";
	donpcevent "objectives#bat_t02_a::OnDisable";
	donpcevent "countdown#bat_t02_a::OnStop";
	donpcevent "countdown#bat_t02_b::OnStop";
	donpcevent "time_event#bat_t02_a::OnStop";
	
	// Starting Croix Scenario.
	donpcevent "barricade#bat_t02_b_1::OnEnable";
	donpcevent "barricade#bat_t02_b_2::OnEnable";
	donpcevent "barricade#bat_t02_b_3::OnEnable";
	donpcevent "guardian#bat_t02_b::OnEnable";
	donpcevent "objectives#bat_t02_b::OnEnable";
	donpcevent "heating_time#bat_t02_b::OnEnable";
	
	bg_digit_timer $@AssaultBG2_id1, 0;
	bg_digit_timer $@AssaultBG2_id2, 0;
	bg_warp $@AssaultBG2_id1, "bat_t02", 84, 316;
	bg_warp $@AssaultBG2_id2, "bat_t02", 236, 316;
	end;
	
OnFinish:
	set $@AssaultBG2, 2;
	set $@AssaultBG2_GuillTimer, gettimetick(2) - $@AssaultBG2_GuillTimer;
	donpcevent "barricade#bat_t02_a_1::OnDisable";
	donpcevent "barricade#bat_t02_a_2::OnDisable";
	donpcevent "barricade#bat_t02_a_3::OnDisable";
	donpcevent "barricade#bat_t02_b_1::OnDisable";
	donpcevent "barricade#bat_t02_b_2::OnDisable";
	donpcevent "barricade#bat_t02_b_3::OnDisable";
	donpcevent "guardian#bat_t02_a::OnDisable";
	donpcevent "guardian#bat_t02_b::OnDisable";
	donpcevent "objectives#bat_t02_a::OnDisable";
	donpcevent "objectives#bat_t02_b::OnDisable";
	donpcevent "time_event#bat_t02_a::OnStop";
	donpcevent "time_event#bat_t02_b::OnStop";
	donpcevent "time#bat_t02::OnStop";
	enablenpc "Lieutenant#t02_a";
	enablenpc "Lieutenant#t02_b";
	
	if( $@AssaultBG2_GuillTimer < $@AssaultBG2_CroixTimer ) {
		set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 2;
		mapannounce "bat_t02", "Guillaume's Army won two points for destroying the Croix Command Pavilion in less time.",bc_map,"0xFFCE00";
		sleep 3000;
	}
	else if( $@AssaultBG2_CroixTimer < $@AssaultBG2_GuillTimer ) {
		set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 2;
		mapannounce "bat_t02", "The Croix Army won two points for destroying Guillaume's Command Pavilion in less time.",bc_map,"0xFFCE00";
		sleep 3000;
	}
	
	bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
	
	if( $@AssaultBG2_GuillScore < $@AssaultBG2_CroixScore ) {
		mapannounce "bat_t02", "Marollo VII: The Croix Army is victorious for its attacking performance!",bc_map,"0x99CC00";
		set $@AssaultBG2_Victory, 2;
	}
	else if( $@AssaultBG2_CroixScore < $@AssaultBG2_GuillScore ) {
		mapannounce "bat_t02", "Marollo VII: Guillaume's Army is victorious for its attacking performance!",bc_map,"0x99CC00";
		set $@AssaultBG2_Victory, 1;
	}
	else {
		mapannounce "bat_t02", "Marollo VII: Both armies did not accomplish the goal, this is a sign of a tie!",bc_map,"0x99CC00";
		set $@AssaultBG2_Victory, 3;
	}
	
	// Computes Ranking and awards rewards
	callfunc "bg_finish", 16, $@AssaultBG2_id1, $@AssaultBG2_id2, $@AssaultBG2_Victory, $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
	
	bg_digit_timer $@AssaultBG2_id1, 0;
	bg_digit_timer $@AssaultBG2_id2, 0;
	donpcevent "start#bat_t02_Out::OnBegin";
	sleep 3000;
	bg_warp $@AssaultBG2_id1, "bat_t02", 84, 316;
	bg_warp $@AssaultBG2_id2, "bat_t02", 236, 316;
	end;

OnGuillaumeQuit:
	callfunc "bg_clear_score", getcharid(0);
	callfunc "bg_ranking", getcharid(0), 16, 0, 0, 1, 0, $@AssaultBG2_CroixScore;
	donpcevent "start#bat_t02::OnReadyCheck";
	end;

OnCroixQuit:
	callfunc "bg_clear_score", getcharid(0);
	callfunc "bg_ranking", getcharid(0), 16, 0, 1, 1, $@AssaultBG2_GuillScore, 0;
	donpcevent "start#bat_t02::OnReadyCheck";
	end;
	
OnGuillWO:
	if( queue_size(16) )
		end;
	
	// Signals Victory
	set $@AssaultBG2, 2;
	set $@AssaultBG2_Victory, 2;
	
	// Computes Ranking and awards rewards
	callfunc "bg_finish", 16, $@AssaultBG2_id1, $@AssaultBG2_id2, $@AssaultBG2_Victory, $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
	
	// Starts Ending Events
	donpcevent "Battle Therapist#t02_a::OnStop";
	donpcevent "Battle Therapist#t02_b::OnStop";
	mapannounce "bat_t02", "Lieutenant Swandery: Guillaume's cowards fled. We won this one! Wow!",bc_map,"0xFFCE00";
	enablenpc "Lieutenant#t02_a";
	enablenpc "Lieutenant#t02_b";
	donpcevent "countdown#bat_t02_a::OnStop";
	donpcevent "countdown#bat_t02_b::OnStop";
	donpcevent "time_event#bat_t02_a::OnStop";
	donpcevent "time_event#bat_t02_b::OnStop";
	donpcevent "start#bat_t02_Out::OnBegin";
	sleep 2000;
	bg_warp $@AssaultBG2_id1, "bat_t02", 84, 316;
	bg_warp $@AssaultBG2_id2, "bat_t02", 236, 316;
	bg_digit_timer $@AssaultBG2_id1, 0;
	bg_digit_timer $@AssaultBG2_id2, 0;
	end;


OnCroixWO:
	if( queue_size(16) )
		end;
	
	// Signals Victory
	set $@AssaultBG2, 2;
	set $@AssaultBG2_Victory, 1;
	
	// Computes Ranking and awards rewards
	callfunc "bg_finish", 16, $@AssaultBG2_id1, $@AssaultBG2_id2, $@AssaultBG2_Victory, $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
	
	// Starts Ending Events
	donpcevent "Battle Therapist#t02_a::OnStop";
	donpcevent "Battle Therapist#t02_b::OnStop";
	mapannounce "bat_t02", "Lieutenant Axl Rose: Croix's cowards fled. We won this one! Wow!",bc_map,"0xFFCE00";
	enablenpc "Lieutenant#t02_a";
	enablenpc "Lieutenant#t02_b";
	donpcevent "countdown#bat_t02_a::OnStop";
	donpcevent "countdown#bat_t02_b::OnStop";
	donpcevent "time_event#bat_t02_a::OnStop";
	donpcevent "time_event#bat_t02_b::OnStop";
	donpcevent "start#bat_t02_Out::OnBegin";
	sleep 2000;
	bg_warp $@AssaultBG2_id1, "bat_t02", 84, 316;
	bg_warp $@AssaultBG2_id2, "bat_t02", 236, 316;
	bg_digit_timer $@AssaultBG2_id1, 0;
	bg_digit_timer $@AssaultBG2_id2, 0;
	end;
	
// Player Check in the Arena.
// -------------------------------------------------------
OnTimer60000:
	stopnpctimer;
	if( !getmapusers("bat_t02") )
	{
		set $@AssaultBG2, 0;
		bg_kick_team $@AssaultBG2_id1;
		bg_kick_team $@AssaultBG2_id2;
		donpcevent "start#bat_t02_Out::OnStop";
		
		if( $@BG_MODE )
			donpcevent "BattleGround#queue_main::OnReload";
		else
			donpcevent "start#bat_t02::OnReadyCheck";
	}
	else
		initnpctimer;
	end;
}

// Barricades
// -------------------------------------------------------
bat_t02,1,2,3	script	barricade#bat_t02_main	CLEAR_NPC,{
OnEnable:
	if( strnpcinfo(2) == "bat_t02_a_1" ) {
		enablenpc "#bat_t02_a_w_1";
		enablenpc "#bat_t02_a_w_2";
		setarray .@spawn[0], 76, 80, 116, $@AssaultBG2_id1;
		setcell "bat_t02", 75, 117, 80, 117, cell_walkable, 0;
	}
	else if( strnpcinfo(2) == "bat_t02_a_2" ) {
		enablenpc "#bat_t02_a_w_3";
		enablenpc "#bat_t02_a_w_4";
		setarray .@spawn[0], 72, 84, 157, $@AssaultBG2_id1;
		setcell "bat_t02", 72, 158, 83, 158, cell_walkable, 0;
		setcell "bat_t02", 72, 158, 83, 158, cell_shootable, 0;
	}
	else if( strnpcinfo(2) == "bat_t02_a_3" ) {
		enablenpc "#bat_t02_a_w_5";
		enablenpc "#bat_t02_a_w_6";
		setarray .@spawn[0], 72, 84, 209, $@AssaultBG2_id1;
		setcell "bat_t02", 72, 210, 83, 210, cell_walkable, 0;
		setcell "bat_t02", 72, 210, 83, 210, cell_shootable, 0;
	}
	else if( strnpcinfo(2) == "bat_t02_b_1" ) {
		enablenpc "#bat_t02_b_w_1";
		enablenpc "#bat_t02_b_w_2";
		setarray .@spawn[0], 248, 252, 115, $@AssaultBG2_id2;
		setcell "bat_t02", 247, 116, 253, 116, cell_walkable, 0;
	}
	else if( strnpcinfo(2) == "bat_t02_b_2" ) {
		enablenpc "#bat_t02_b_w_3";
		enablenpc "#bat_t02_b_w_4";
		setarray .@spawn[0], 244, 256, 157, $@AssaultBG2_id2;
		setcell "bat_t02", 244, 158, 255, 158, cell_walkable, 0;
		setcell "bat_t02", 244, 158, 255, 158, cell_shootable, 0;
	}
	else if( strnpcinfo(2) == "bat_t02_b_3" ) {
		enablenpc "#bat_t02_b_w_5";
		enablenpc "#bat_t02_b_w_6";
		setarray .@spawn[0], 244, 256, 210, $@AssaultBG2_id2;
		setcell "bat_t02", 244, 211, 255, 211, cell_walkable, 0;
		setcell "bat_t02", 244, 211, 255, 211, cell_shootable, 0;
	}
	else {
		// No more barricades.
		end;
	}
	
	for( set .@i,.@spawn[0]; .@i < .@spawn[1]; set .@i,.@i+1 )
		bg_monster .@spawn[3], "bat_t02", .@i, .@spawn[2], " ", 1906, "", "barricade#" + strnpcinfo(2) + "::OnMobDead";
	
	end;
	
OnMobDead:
	if( mobcount("bat_t02", "barricade#" + strnpcinfo(2) + "::OnMobDead") < 1 ) {
		if( strnpcinfo(2) == "bat_t02_a_1" ) {
			set .@army$, "Croix";
			set .@display$, "Guard Corps";
			disablenpc "#bat_t02_a_w_1";
			disablenpc "#bat_t02_a_w_2";
			setcell "bat_t02", 75, 117, 80, 117, cell_walkable, 1;
			set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		}
		else if( strnpcinfo(2) == "bat_t02_a_2" ) {
			set .@army$, "Croix";
			set .@display$, "Training Camp";
			disablenpc "#bat_t02_a_w_3";
			disablenpc "#bat_t02_a_w_4";
			setcell "bat_t02", 72, 158, 83, 158, cell_walkable, 1;
			setcell "bat_t02", 72, 158, 83, 158, cell_shootable, 1;
			set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		}
		else if( strnpcinfo(2) == "bat_t02_a_3" ) {
			set .@army$, "Croix";
			set .@display$, "Command Pavilion";
			disablenpc "#bat_t02_a_w_5";
			disablenpc "#bat_t02_a_w_6";
			setcell "bat_t02", 72, 210, 83, 210, cell_walkable, 1;
			setcell "bat_t02", 72, 210, 83, 210, cell_shootable, 1;
			set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		}
		else if( strnpcinfo(2) == "bat_t02_b_1" ) {
			set .@army$, "Guillaume";
			set .@display$, "Guard Corps";
			disablenpc "#bat_t02_b_w_1";
			disablenpc "#bat_t02_b_w_2";
			setcell "bat_t02", 247, 116, 253, 116, cell_walkable, 1;
			set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		}
		else if( strnpcinfo(2) == "bat_t02_b_2" ) {
			set .@army$, "Guillaume";
			set .@display$, "Training Camp";
			disablenpc "#bat_t02_b_w_3";
			disablenpc "#bat_t02_b_w_4";
			setcell "bat_t02", 244, 158, 255, 158, cell_walkable, 1;
			setcell "bat_t02", 244, 158, 255, 158, cell_shootable, 1;
			set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		}
		else if( strnpcinfo(2) == "bat_t02_b_3" ) {
			set .@army$, "Guillaume";
			set .@display$, "Command Pavilion";
			disablenpc "#bat_t02_b_w_5";
			disablenpc "#bat_t02_b_w_6";
			setcell "bat_t02", 244, 211, 255, 211, cell_walkable, 1;
			setcell "bat_t02", 244, 211, 255, 211, cell_shootable, 1;
			set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		}
		else {
			// There are no events.
			end;
		}
		
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		mapannounce "bat_t02", "The Barricade that prevented the advance of the " + .@army$ + " Army tho the " + .@display$ + " was destroyed.",bc_map,"0xFFCE00";
	}
	end;

OnDisable:
	if( strnpcinfo(2) == "bat_t02_a_1" ) {
		disablenpc "#bat_t02_a_w_1";
		disablenpc "#bat_t02_a_w_2";
		setcell "bat_t02", 75, 117, 80, 117, cell_walkable, 1;
	}
	else if( strnpcinfo(2) == "bat_t02_a_2" ) {
		disablenpc "#bat_t02_a_w_3";
		disablenpc "#bat_t02_a_w_4";
		setcell "bat_t02", 72, 158, 83, 158, cell_walkable, 1;
		setcell "bat_t02", 72, 158, 83, 158, cell_shootable, 1;
	}
	else if( strnpcinfo(2) == "bat_t02_a_3" ) {
		disablenpc "#bat_t02_a_w_5";
		disablenpc "#bat_t02_a_w_6";
		setcell "bat_t02", 72, 210, 83, 210, cell_walkable, 1;
		setcell "bat_t02", 72, 210, 83, 210, cell_shootable, 1;
	}
	else if( strnpcinfo(2) == "bat_t02_b_1" ) {
		disablenpc "#bat_t02_b_w_1";
		disablenpc "#bat_t02_b_w_2";
		setcell "bat_t02", 247, 116, 253, 116, cell_walkable, 1;
	}
	else if( strnpcinfo(2) == "bat_t02_b_2" ) {
		disablenpc "#bat_t02_b_w_3";
		disablenpc "#bat_t02_b_w_4";
		setcell "bat_t02", 244, 158, 255, 158, cell_walkable, 1;
		setcell "bat_t02", 244, 158, 255, 158, cell_shootable, 1;
	}
	else if( strnpcinfo(2) == "bat_t02_b_3" ) {
		disablenpc "#bat_t02_b_w_5";
		disablenpc "#bat_t02_b_w_6";
		setcell "bat_t02", 244, 211, 255, 211, cell_walkable, 1;
		setcell "bat_t02", 244, 211, 255, 211, cell_shootable, 1;
	}
	else {
		// No more barricades.
		end;
	}
	
	killmonster "bat_t02", "barricade#" + strnpcinfo(2) + "::OnMobDead";
	end;
}

// Guillaume's Scenery Barricades
// -------------------------------------------------------
bat_t02,1,3,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_a_1	CLEAR_NPC
bat_t02,1,4,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_a_2	CLEAR_NPC
bat_t02,1,5,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_a_3	CLEAR_NPC

// Croix's Scenery Barricades
// -------------------------------------------------------
bat_t02,1,6,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_b_1	CLEAR_NPC
bat_t02,1,7,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_b_2	CLEAR_NPC
bat_t02,1,8,3	duplicate(barricade#bat_t02_main)	barricade#bat_t02_b_3	CLEAR_NPC

// Teleporters
// -------------------------------------------------------
bat_t02,1,9,3	script	warps#bat_t02_main	CLEAR_NPC,{
	if( strnpcinfo(2) == "bat_t02_main")
		end;
	
	set .@n, atoi(charat(strnpcinfo(2),12));
	if( compare(strnpcinfo(2), "bat_t02_a_") ) {
		if( getcharid(4) != $@AssaultBG2_id1 )
			end;
			
		switch( .@n )
		{
			case 1:	warp "bat_t02", 71, 113; break;
			case 2:	warp "bat_t02", 84, 113; break;
			case 3:	warp "bat_t02", 66, 159; break;
			case 4:	warp "bat_t02", 89, 159; break;
			case 5:	warp "bat_t02", 74, 212; break;
			case 6:	warp "bat_t02", 65, 210; break;
			default: break;
		}
	}
	else {
		if( getcharid(4) != $@AssaultBG2_id2 )
			end;
			
		switch( .@n )
		{
			case 1:	warp "bat_t02", 240, 113; break;
			case 2:	warp "bat_t02", 259, 113; break;
			case 3: warp "bat_t02", 238, 157; break;
			case 4: warp "bat_t02", 261, 157; break;
			case 5: warp "bat_t02", 238, 209; break;
			case 6: warp "bat_t02", 245, 214; break;
			default: break;
		}
	}
	end;
	
OnInit:
	if( strnpcinfo(2) != "bat_t02_a_main" )
		disablenpc strnpcinfo(0);
	end;
}

// Guillaume's Scenery teleporters
// -------------------------------------------------------
bat_t02,71,118,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_1	CLEAR_NPC
bat_t02,84,118,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_2	CLEAR_NPC
bat_t02,73,160,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_3	CLEAR_NPC
bat_t02,82,160,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_4	CLEAR_NPC
bat_t02,66,210,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_5	CLEAR_NPC
bat_t02,73,212,3	duplicate(warps#bat_t02_main)	#bat_t02_a_w_6	CLEAR_NPC

// Croix's Scenery teleporters
// -------------------------------------------------------
bat_t02,240,117,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_1	CLEAR_NPC
bat_t02,259,117,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_2	CLEAR_NPC
bat_t02,244,163,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_3	CLEAR_NPC
bat_t02,255,163,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_4	CLEAR_NPC
bat_t02,245,214,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_5	CLEAR_NPC
bat_t02,238,209,3	duplicate(warps#bat_t02_main)	#bat_t02_b_w_6	CLEAR_NPC


// Guillaume's Scenery Guardians
// -------------------------------------------------------
bat_t02,1,10,3	script	guardian#bat_t02_a	CLEAR_NPC,{
OnEnable:
	bg_monster $@AssaultBG2_id1, "bat_t02", 62, 150, "Sentinel", 1949, "Guard Corps", "guardian#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 62, 150, "Sentinel", 1949, "Guard Corps", "guardian#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 85, 201, "Sentinel", 1949, "Training Camp", "guardian#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 85, 201, "Sentinel", 1949, "Training Camp", "guardian#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 78, 223, "Sentinel", 1949, "Command Pavilion", "guardian#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 78, 223, "Sentinel", 1949, "Command Pavilion", "guardian#bat_t02_a::OnMobDead";
	end;
	
OnDisable:
	killmonster "bat_t02", "guardian#bat_t02_a::OnMobDead";
	end;
	
OnMobDead:
	if( mobcount("bat_t02", "guardian#bat_t02_a::OnMobDead") < 1 ) {
		set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		mapannounce "bat_t02", "Croix's Army eliminated all Guillaume's Army Sentinels.",bc_map,"0xFFCE00";
	}
	end;
}

// Croix's Scenery Guardians
// -------------------------------------------------------
bat_t02,1,11,3	script	guardian#bat_t02_b	CLEAR_NPC,{
OnEnable:
	bg_monster $@AssaultBG2_id2, "bat_t02", 233, 148, "Sentinel", 1950, "Guard Corps", "guardian#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 233, 148, "Sentinel", 1950, "Guard Corps", "guardian#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 261, 201, "Sentinel", 1950, "Training Camp", "guardian#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 261, 201, "Sentinel", 1950, "Training Camp", "guardian#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 250, 221, "Sentinel", 1950, "Command Pavilion", "guardian#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 250, 221, "Sentinel", 1950, "Command Pavilion", "guardian#bat_t02_b::OnMobDead";
	end;
	
OnDisable:
	killmonster "bat_t02", "guardian#bat_t02_b::OnMobDead";
	end;
	
OnMobDead:
	if( mobcount("bat_t02", "guardian#bat_t02_b::OnMobDead") < 1 ) {
		set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		mapannounce "bat_t02", "Guillaume's Army eliminated all Croix's Army Sentinels.",bc_map,"0xFFCE00";
	}
	end;
}

// Guillaume's Scenario Objectives
// -------------------------------------------------------
bat_t02,1,12,3	script	objectives#bat_t02_a	CLEAR_NPC,{
OnEnable:
	bg_monster $@AssaultBG2_id1, "bat_t02", 61, 153, "Guard Corps", 1909, "", "objectives#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 88, 202, "Arsenal", 1909, "", "objectives#bat_t02_a::OnMobDead";
	bg_monster $@AssaultBG2_id1, "bat_t02", 77, 227, "Command Pavillion", 1909, "", "objectives#bat_t02_a::OnFinish";
	end;
	
OnDisable:
	killmonster "bat_t02", "objectives#bat_t02_a::OnMobDead";
	killmonster "bat_t02", "objectives#bat_t02_a::OnFinish";
	end;
	
OnMobDead:
	if( mobcount("bat_t02", "objectives#bat_t02_a::OnMobDead") < 1 ) {
		set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		mapannounce "bat_t02", "Croix's Army has eliminated the Pavilions that make up the Outpost Guard.",bc_map,"0xFFCE00";
	}
	end;
	
OnFinish:
	if( mobcount("bat_t02", "objectives#bat_t02_a::OnFinish") < 1 ) {
		set $@AssaultBG2_CroixScore, $@AssaultBG2_CroixScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		donpcevent "start#bat_t02::OnChange";
		sleep 3000;
		mapannounce "bat_t02", "Croix's Army has eliminated the Guillaume Army Command Pavilion, the setting is being altered!",bc_map,"0xFFCE00";
	}
	end;
}

// Croix's Scenario Objectives
// -------------------------------------------------------
bat_t02,1,13,3	script	objectives#bat_t02_b	CLEAR_NPC,{
OnEnable:
	bg_monster $@AssaultBG2_id2, "bat_t02", 233, 151, "Guard Corps", 1909, "", "objectives#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 261, 201, "Arsenal", 1909, "", "objectives#bat_t02_b::OnMobDead";
	bg_monster $@AssaultBG2_id2, "bat_t02", 249, 225, "Command Pavilion", 1909, "", "objectives#bat_t02_b::OnFinish";
	end;
	
OnDisable:
	killmonster "bat_t02", "objectives#bat_t02_b::OnMobDead";
	killmonster "bat_t02", "objectives#bat_t02_b::OnFinish";
	end;
	
OnMobDead:
	if( mobcount("bat_t02", "objectives#bat_t02_b::OnMobDead") < 1 ) {
		set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		mapannounce "bat_t02", "Guillaume's Army eliminated the Pavilions that make up the Guard of the Outpost.",bc_map,"0xFFCE00";
	}
	end;
	
OnFinish:
	if( mobcount("bat_t02", "objectives#bat_t02_b::OnFinish") < 1 ) {
		set $@AssaultBG2_GuillScore, $@AssaultBG2_GuillScore + 1;
		bg_updatescore "bat_t02", $@AssaultBG2_GuillScore, $@AssaultBG2_CroixScore;
		donpcevent "start#bat_t02::OnFinish";
		sleep 3000;
		mapannounce "bat_t02", "Guillaume's Army has eliminated Guillaume's Army Command Pavilion, the setting is being altered!",bc_map,"0xFFCE00";
	}
	end;
}

// Therapists
// -------------------------------------------------------
bat_t02,1,14,3	script	time#bat_t02	CLEAR_NPC,{
OnEnable:
	donpcevent "Battle Therapist#t02_a::OnEnable";
	donpcevent "Battle Therapist#t02_b::OnEnable";
	end;

OnStop:
	donpcevent "Battle Therapist#t02_a::OnStop";
	donpcevent "Battle Therapist#t02_b::OnStop";
	end;
}

bat_t02,87,319,3	script	Battle Therapist#t02_a	4_F_SISTER,{
	specialeffect2 EF_HEAL;
	mes "[Battle Therapist]";
	mes "Just close your eyes";
	mes "and take a deep breath.";
	mes "You can free yourself from pain.";
	close;

OnTimer25000:
	specialeffect EF_SANCTUARY;
	end;
	
OnTimer26500:
	stopnpctimer;
	donpcevent "Battle Therapist#t02_a::OnEnable";
	end;

OnEnable:
	initnpctimer;
	enablenpc "Battle Therapist#t02_a";
	end;

OnStop:
	disablenpc "Battle Therapist#t02_a";
	stopnpctimer;
	end;
}

bat_t02,239,319,3	script	Battle Therapist#t02_b	4_F_SISTER,{
	specialeffect2 EF_HEAL;
	mes "[Battle Therapist]";
	mes "Just close your eyes";
	mes "and take a deep breath.";
	mes "You can free yourself from pain.";
	close;

OnTimer25000:
	specialeffect EF_SANCTUARY;
	end;

OnTimer26500:
	stopnpctimer;
	donpcevent "Battle Therapist#t02_b::OnEnable";
	end;

OnEnable:
	initnpctimer;
	enablenpc "Battle Therapist#t02_b";
	end;

OnStop:
	disablenpc "Battle Therapist#t02_b";
	stopnpctimer;
	end;
}

// Countdown
// NOTE: Set to 10 minutes.
// -------------------------------------------------------
bat_t02,1,15,3	script	countdown#bat_t02_a	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	stopnpctimer;
	initnpctimer;
	end;

OnStop:
	stopnpctimer;
	end;

OnTimer7000:
	mapannounce "bat_t02", "Lieutenant Axl Rose : The Enemy is attacking, reinforce our walls as they were their lives!",bc_map,"0xFF9900";
	end;

OnTimer8000:
	mapannounce "bat_t02", "Lieutenant Swandery : Let's attack !!! Let's destroy the Outpost before the reinforcements arrive!",bc_map,"0xFF99CC";
	end;

OnTimer580000:
	mapannounce "bat_t02", "Marollo VII : Guillaume Marollo, Croix Marollo! And his followers!",bc_map,"0x99CC00";
	end;

OnTimer580300:
	mapannounce "bat_t02", "Marollo VII : Both armies are very competitive, so it is difficult to judge which group is superior.",bc_map,"0x99CC00";
	end;

OnTimer580800:
	mapannounce "bat_t02", "Marollo VII : This Time Assault battle is a waste of time. Soon I will decide victory and defeat for your progress.",bc_map,"0x99CC00";
	end;

OnTimer582200:
	mapannounce "bat_t02", "Marollo VII : If you do not accept this result, try your luck in another battle valley!",bc_map,"0x99CC00";
	end;

OnTimer582500:
	mapannounce "bat_t02", "Axl Rose, Swandery : Yes sir.",bc_map,"0x99CC00";
	stopnpctimer;
	end;
}

bat_t02,1,15,3	script	countdown#bat_t02_b	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	stopnpctimer;
	initnpctimer;
	end;

OnStop:
	stopnpctimer;
	end;

OnTimer7000:
	mapannounce "bat_t02", "Lieutenant Swandery : The Enemy is attacking, strengthen our walls as they were their lives!",bc_map,"0xFF9900";
	end;

OnTimer8000:
	mapannounce "bat_t02", "Lieutenant Axl Rose : Let's attack !!! Let's destroy the Outpost before the reinforcements arrive!",bc_map,"0xFF99CC";
	end;

OnTimer580000:
	mapannounce "bat_t02", "Marollo VII : Guillaume Marollo, Croix Marollo! And his followers!",bc_map,"0x99CC00";
	end;

OnTimer580300:
	mapannounce "bat_t02", "Marollo VII : Both armies are very competitive, so it is difficult to judge which group is superior.",bc_map,"0x99CC00";
	end;

OnTimer580800:
	mapannounce "bat_t02", "Marollo VII : This Time Assault battle is a waste of time. Soon I will decide victory and defeat for your progress.",bc_map,"0x99CC00";
	end;

OnTimer582200:
	mapannounce "bat_t02", "Marollo VII : If you do not accept this result, try your luck in another battle valley!",bc_map,"0x99CC00";
	end;

OnTimer582500:
	mapannounce "bat_t02", "Axl Rose, Swandery : Yes Sir.",bc_map,"0x99CC00";
	stopnpctimer;
	end;
}

// Time Controllers
// NOTE: It is not possible to update the time immediately
//       by BG AdminCP, only in the next battle.
// -------------------------------------------------------
bat_t02,1,17,3	script	time_event#bat_t02_a	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	stopnpctimer;
	set .Assault_Timer, 0;
	initnpctimer;
	end;

OnStop:
	stopnpctimer;
	end;
	
OnTimer60000:
	set .Assault_Timer, .Assault_Timer+1;
	if( .Assault_Timer >= $@AssaultBG2_TIMER ) {
		donpcevent "start#bat_t02::OnChange";
		sleep 3000;
		mapannounce "bat_t02", "The reinforcements arrived, and the Croix's Army failed to destroy the Command Pavilion at Guillaume's Outpost!",bc_map,"0xFFCE00";
	}
	else {
		stopnpctimer;
		initnpctimer;
	}
	end;
}

bat_t02,1,18,3	script	heating_time#bat_t02_a	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	initnpctimer;
	bg_set_respawn $@AssaultBG2_id1, 84, 316;
	bg_set_respawn $@AssaultBG2_id2, 236, 316;
	bg_digit_timer $@AssaultBG2_id1, 0;
	bg_digit_timer $@AssaultBG2_id2, 0;
	end;
	
OnStop:
	donpcevent "countdown#bat_t02_a::OnStop";
	stopnpctimer;
	end;
	
OnTimer10000:
	mapannounce "bat_t02", "Take advantage of warm up time to prepare for Battle!",bc_map,"0x00FF00";
	end;
	
OnTimer20000:
	mapannounce "bat_t02", "The warm up time will end in 10 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer25000:
	mapannounce "bat_t02", "The warm up time will end in 5 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer26000:
	mapannounce "bat_t02", "The warm up time will end in 4 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer27000:
	mapannounce "bat_t02", "The warm up time will end in 3 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer28000:
	mapannounce "bat_t02", "The warm up time will end in 2 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer29000:
	mapannounce "bat_t02", "The warm up time will end in 1 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer30000:
	set $@AssaultBG2_CroixTimer, gettimetick(2);
	bg_set_respawn $@AssaultBG2_id1, 23, 189;
	bg_set_respawn $@AssaultBG2_id2, 77, 90;
	bg_warp $@AssaultBG2_id1, "bat_t02", 23, 189;
	bg_warp $@AssaultBG2_id2, "bat_t02", 77, 90;
	bg_digit_timer $@AssaultBG2_id1, (60*$@AssaultBG2_TIMER);
	bg_digit_timer $@AssaultBG2_id2, (60*$@AssaultBG2_TIMER);
	end;
	
OnTimer32000:
	donpcevent "time_event#bat_t02_a::OnEnable";
	donpcevent "countdown#bat_t02_a::OnEnable";
	end;
}

bat_t02,1,19,3	script	time_event#bat_t02_b	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	stopnpctimer;
	set .Assault_Timer, 0;
	initnpctimer;
	end;

OnStop:
	stopnpctimer;
	end;
	
OnTimer60000:
	set .Assault_Timer, .Assault_Timer+1;
	if( .Assault_Timer >= $@AssaultBG2_TIMER ) {
		donpcevent "start#bat_t02::OnFinish";
		mapannounce "bat_t02", "The reinforcements arrived, and Guillaume's Army failed to destroy the Command Pavilion of at Croix's Outpost!",bc_map,"0xFFCE00";
	}
	else {
		stopnpctimer;
		initnpctimer;
	}
	end;
}

bat_t02,1,20,3	script	heating_time#bat_t02_b	CLEAR_NPC,{
OnInit:
	stopnpctimer;
	end;

OnEnable:
	initnpctimer;
	bg_set_respawn $@AssaultBG2_id1, 84, 316;
	bg_set_respawn $@AssaultBG2_id2, 236, 316;
	end;
	
OnStop:
	stopnpctimer;
	donpcevent "countdown#bat_t02_b::OnStop";
	end;
	
OnTimer10000:
	mapannounce "bat_t02", "Take advantage of warm up time to prepare for Battle!",bc_map,"0x00FF00";
	end;
	
OnTimer20000:
	mapannounce "bat_t02", "The warm up time will end in 10 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer25000:
	mapannounce "bat_t02", "The warm up time will end in 5 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer26000:
	mapannounce "bat_t02", "The warm up time will end in 4 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer27000:
	mapannounce "bat_t02", "The warm up time will end in 3 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer28000:
	mapannounce "bat_t02", "The warm up time will end in 2 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer29000:
	mapannounce "bat_t02", "The warm up time will end in 1 seconds!",bc_map,"0x00FF00";
	end;
	
OnTimer30000:
	set $@AssaultBG2_GuillTimer, gettimetick(2);
	bg_set_respawn $@AssaultBG2_id1, 248, 87;
	bg_set_respawn $@AssaultBG2_id2, 195, 188;
	bg_warp $@AssaultBG2_id1, "bat_t02", 248, 87;
	bg_warp $@AssaultBG2_id2, "bat_t02", 195, 188;
	bg_digit_timer $@AssaultBG2_id1, (60*$@AssaultBG2_TIMER);
	bg_digit_timer $@AssaultBG2_id2, (60*$@AssaultBG2_TIMER);
	end;
	
OnTimer32000:
	donpcevent "time_event#bat_t02_b::OnEnable";
	donpcevent "countdown#bat_t02_b::OnEnable";
	end;
}

-	script	start#bat_t02_Out	FAKE_NPC,{
	end;

OnBegin:
	initnpctimer;
	end;
	
OnStop:
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "bat_t02", "Please talk to the Lieutenant to leave the battlefield.",bc_map,"0x00ff00";
	end;

OnTimer3000:
	mapannounce "bat_t02", "In 30 seconds, the Lieutenant will dispense with the grouping.",bc_map,"0x00ff00";
	end;

OnTimer5000:
	mapannounce "bat_t02", "Speak to the Lieutenant to leave the battlefield immediately. Please be careful.",bc_map,"0x00ff00";
	end;

OnTimer55000:
	mapannounce "bat_t02", "You will be sent back.",bc_map,"0x00ff00";
	end;

OnTimer60000:
	stopnpctimer;
	bg_kick_team $@AssaultBG2_id1;
	bg_kick_team $@AssaultBG2_id2;
	donpcevent "start#bat_t02::OnReset";
	mapwarp "bat_t02","bat_room",154,150;
	maprespawnguildid "bat_t02",0,3; // Just in case someone else
	end;
}

// Remove Players from the Arena
// -------------------------------------------------------
bat_t02,1,21,3	script	Release all#t02	4_DOG01,{
	set .@i, callfunc("F_GM_NPC",1854,0);
	if (.@i == -1) {
		mes "Canceled.";
		close;
	} else if (.@i == 0) {
		end;
	} else {
		mes "Do you need my help?";
		next;
		switch(select("Release all.:Cancel.")) {
		case 1:
			mes "Goodbye.";
			close2;
			mapwarp "bat_t02","bat_room",154,150;
			end;
		case 2:
			mes "Canceled.";
			close;
		}
	}
}

// Flags
// -----------------------------------------------------------------
bat_t02,53,193,2	script	Guillaume's Army#t02_01	GUILD_FLAG,{
	end;

OnBatT02Emblem:
	bg_set_npc $@AssaultBG2_id1;
	end;
}

bat_t02,53,184,2	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_02	GUILD_FLAG
bat_t02,89,196,3	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_03	GUILD_FLAG
bat_t02,66,152,4	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_04	GUILD_FLAG
bat_t02,65,112,4	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_05	GUILD_FLAG
bat_t02,90,113,4	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_06	GUILD_FLAG
bat_t02,67,236,4	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_07	GUILD_FLAG
bat_t02,89,236,4	duplicate(Guillaume's Army#t02_01)	Guillaume's Army#t02_08	GUILD_FLAG

bat_t02,224,192,2	script	Croix's Army#t02_01	GUILD_FLAG,{
	end;

OnBatT02Emblem:
	bg_set_npc $@AssaultBG2_id2;
	end;
}

bat_t02,224,182,2	duplicate(Croix's Army#t02_01)	Croix's Army#t02_02	GUILD_FLAG
bat_t02,265,196,3	duplicate(Croix's Army#t02_01)	Croix's Army#t02_03	GUILD_FLAG
bat_t02,238,151,4	duplicate(Croix's Army#t02_01)	Croix's Army#t02_04	GUILD_FLAG
bat_t02,240,111,4	duplicate(Croix's Army#t02_01)	Croix's Army#t02_05	GUILD_FLAG
bat_t02,259,111,4	duplicate(Croix's Army#t02_01)	Croix's Army#t02_06	GUILD_FLAG
bat_t02,239,235,4	duplicate(Croix's Army#t02_01)	Croix's Army#t02_07	GUILD_FLAG
bat_t02,260,235,4	duplicate(Croix's Army#t02_01)	Croix's Army#t02_08	GUILD_FLAG

// Lieutenants
// -------------------------------------------------------
bat_t02,87,319,3	script	Lieutenant#t02_a	4_M_KY_HEAD,{
	mes "[Axl Rose]";
	if( getcharid(4) == $@AssaultBG2_id2 )
	{
		mes "What?? Some of the Croix Army soldiers are doing it at Guillaume's camp!!";
		mes "A soldier will lead you to his group.";
		close2;
		warp "bat_t02", 236, 316;
		end;
	}
	else if( getcharid(4) == $@AssaultBG2_id1 )
	{
		if( $@AssaultBG2_Victory == 0 )
		{
			mes "The Battle is not yet soldered, go right to your post, Guillaume's Army needs you!";
			close;
		}
		else if( $@AssaultBG2_Victory == 1 )
		{
			mes "Bless the Guillaume Army!";
			mes strcharinfo(0) + ", let's enjoy our glorious victory!";
		}
		else if( $@AssaultBG2_Victory == 2 ) {
			mes "You lost, but you dedicated yourself to this battle for Guillaume Marollo!";
			mes "Consider this defeat as a lesson, and next time you will come out victorious.";
		}
		else {
			mes "This indeed was a great Battle!";
			mes "Not everyone can come out victorious, consider this tie as a lesson and next time we will be victorious.";
		}
		close2;
		bg_leave;
	}
	else {
		mes "A Civilian on our battlefield?";
		mes "We'll take you to a safe place!";
		close2;
	}
	warp "prontera", 156, 176;
	end;

OnInit:
	disablenpc "Lieutenant#t02_a";
	end;
}

bat_t02,239,319,3	script	Lieutenant#t02_b	4_M_CRU_HEAD,{
	mes "[Swandery]";
	if( getcharid(4) == $@AssaultBG2_id1 )
	{
		mes "What?? One of Guillaume's Army soldiers is doing at Croix's camp!!";
		mes "A soldier will lead you to his group.";
		close2;
		warp "bat_t02", 84, 316;
		end;
	}
	else if( getcharid(4) == $@AssaultBG2_id2 )
	{
		if( $@AssaultBG2_Victory == 0 )
		{
			mes "The Battle is not yet soldered, go right to your post, the Croix Army needs you!";
			close;
		}
		else if( $@AssaultBG2_Victory == 1 ) {
			mes "Oh " + strcharinfo(0) + ", do not be sed.";
			mes "Even if we did not win, we did our best.";
			mes "Do not forget this battle, we will win the next.";
		}
		else if( $@AssaultBG2_Victory == 2 )
		{
			mes "Bless the Croix Army!";
			mes strcharinfo(0) + ", let's enjoy our glorious victory!";
		}
		else {
			mes "This indeed was a great Battle!";
			mes "Not everyone can come out victorious, do not forget this battle!";
			mes "We'll win the next one.";
		}
		close2;
		bg_leave;
	}
	else {
		mes "A Civilian on our battlefield?";
		mes "We'll take you to a safe place!";
		close2;
	}
	warp "prontera", 156, 176;
	end;

OnInit:
	disablenpc "Lieutenant#t02_b";
	end;
}

// MapFlags
// -----------------------------------------------------------------
bat_t02	mapflag	nowarp
bat_t02	mapflag	nowarpto
bat_t02	mapflag	nomemo
bat_t02	mapflag	noteleport
bat_t02	mapflag	nosave
bat_t02	mapflag	noreturn
bat_t02	mapflag	nobranch
bat_t02	mapflag	nopenalty
bat_t02	mapflag	battleground	2